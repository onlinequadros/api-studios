generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model address {
  id           String   @id(map: "PK_d92de1f82754668b5f5f5dd4fd5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  address_name String   @db.VarChar
  number       String   @db.VarChar
  district     String   @db.VarChar
  city         String   @db.VarChar
  uf           String   @db.VarChar
  cep          String   @db.VarChar
  complement   String   @db.VarChar
  favorite     Boolean
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user_id      String?  @db.VarChar
  users        users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_35cd6c3fafec0bb5d072e24ea20")
}

model category {
  id         String   @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @db.VarChar
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model client {
  id                 String              @id(map: "PK_96da49381769303a6515a8785c7") @db.VarChar
  name               String              @db.VarChar
  lastname           String              @db.VarChar
  cpf                String              @db.VarChar
  email              String              @db.VarChar
  phone              String              @db.VarChar
  sex                String              @db.VarChar
  birth_date         String              @db.VarChar
  cnpj               String?             @db.VarChar
  company_name       String?             @db.VarChar
  message_email      String?             @db.VarChar
  address            String              @db.VarChar
  number             String              @db.VarChar
  district           String              @db.VarChar
  city               String              @db.VarChar
  uf                 String              @db.VarChar
  cep                String              @db.VarChar
  complement         String?             @db.VarChar
  segment            client_segment_enum
  password           String              @db.VarChar
  login_notification Boolean
  code_access        String?             @db.VarChar
  validate_access    Boolean?
  tenant_company     String              @unique(map: "UQ_e474050210979aca62b9721adcb") @db.VarChar
  role               String              @db.VarChar
  status             String?             @db.VarChar
  plan_recurrence    String?             @db.VarChar
  plan_id            String?             @db.VarChar
  is_active          String?             @db.VarChar
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  updated_at         DateTime            @default(now()) @db.Timestamp(6)
  deleted_at         DateTime?           @db.Timestamp(6)
}

model companies {
  id                 String                 @id(map: "PK_d4bc3e82a314fa9e29f652c2c22") @db.VarChar
  name               String                 @db.VarChar
  lastname           String                 @db.VarChar
  cpf                String                 @db.VarChar
  email              String                 @db.VarChar
  phone              String                 @db.VarChar
  sex                String                 @db.VarChar
  birth_date         String                 @db.VarChar
  cnpj               String?                @db.VarChar
  company_name       String?                @db.VarChar
  message_email      String?                @db.VarChar
  address            String                 @db.VarChar
  number             String                 @db.VarChar
  district           String                 @db.VarChar
  city               String                 @db.VarChar
  uf                 String                 @db.VarChar
  cep                String                 @db.VarChar
  complement         String?                @db.VarChar
  segment            companies_segment_enum
  password           String                 @db.VarChar
  login_notification Boolean
  code_access        String?                @db.VarChar
  validate_access    Boolean?
  tenant_company     String                 @unique(map: "UQ_0018e226f71f2519c684e818bd3") @db.VarChar
  role               String                 @db.VarChar
  status             String?                @db.VarChar
  plan_recurrence    String?                @db.VarChar
  plan_id            String?                @db.VarChar
  is_active          String?                @db.VarChar
  created_at         DateTime               @default(now()) @db.Timestamp(6)
  updated_at         DateTime               @default(now()) @db.Timestamp(6)
  deleted_at         DateTime?              @db.Timestamp(6)
  users_tokens       users_tokens?
}

model productartist {
  id            String                  @id(map: "PK_cfb995ad7e6d480ae12c9adf604") @db.VarChar
  type          productartist_type_enum
  name          String                  @db.VarChar
  category      String                  @db.VarChar
  client_user   String[]                @db.VarChar
  sku_father    String                  @db.VarChar
  slug          String                  @db.VarChar
  tags          String[]                @db.VarChar
  photo         String?                 @db.VarChar
  price         String                  @db.VarChar
  feature_photo Boolean
  url           String?                 @db.VarChar
  created_at    DateTime                @default(now()) @db.Timestamp(6)
  updated_at    DateTime                @default(now()) @db.Timestamp(6)
}

model productstudio {
  id                        String                  @id(map: "PK_2b56de115bbac3924a859df208f") @db.VarChar
  type                      productstudio_type_enum
  name                      String                  @db.VarChar
  category                  String                  @db.VarChar
  client_user               String[]                @db.VarChar
  sku_father                String                  @db.VarChar
  slug                      String                  @db.VarChar
  tags                      String[]                @db.VarChar
  active_deadline           Boolean
  deadline                  DateTime?               @db.Timestamp(6)
  amount_photos             Int
  amount_extra_photos       Int
  price_extra_photos        String                  @db.VarChar
  one_third_photos          Int
  two_third_photos          Int
  full_fotos                Int
  discount_one_third_photos String                  @db.VarChar
  discount_two_third_photos String                  @db.VarChar
  discount_full_photos      String                  @db.VarChar
  amount_receivable         String                  @db.VarChar
  created_at                DateTime                @default(now()) @db.Timestamp(6)
  updated_at                DateTime                @default(now()) @db.Timestamp(6)
  productstudiophotos       productstudiophotos[]
}

model productstudiophotos {
  id               String         @id(map: "PK_32a391b4e2ee95a25d96fe7d2a7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  photo            String         @db.VarChar
  feature_photo    Boolean?
  url              String         @db.VarChar
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  product_photo_id String?        @db.VarChar
  productstudio    productstudio? @relation(fields: [product_photo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_26bd7c319c7bc65b7a211b4cd35")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model typeorm_metadata {
  type     String  @db.VarChar
  database String? @db.VarChar
  schema   String? @db.VarChar
  table    String? @db.VarChar
  name     String? @db.VarChar
  value    String?

  @@ignore
}

model users {
  id          String               @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @db.VarChar
  name        String               @db.VarChar
  lastname    String               @db.VarChar
  cpf         String               @db.VarChar
  email       String               @db.VarChar
  phone       String               @db.VarChar
  sex         String               @db.VarChar
  birth_date  String               @db.VarChar
  password    String               @db.VarChar
  avatar      String?              @db.VarChar
  role        String               @db.VarChar
  permissions String[]             @db.VarChar
  is_active   Boolean?
  user_type   users_user_type_enum
  created_at  DateTime             @default(now()) @db.Timestamp(6)
  updated_at  DateTime             @default(now()) @db.Timestamp(6)
  slug        String?              @db.VarChar
  address     address[]
}

model users_tokens {
  id            String    @id(map: "PK_9f236389174a6ccbd746f53dca8") @db.VarChar
  expires_date  DateTime  @db.Timestamp(6)
  refresh_token String    @db.VarChar
  user_id       String    @unique(map: "REL_32f96022cc5076fe565a5cba20") @db.VarChar
  companies     companies @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_32f96022cc5076fe565a5cba20b")
}

enum client_segment_enum {
  Studio
  Artista
}

enum companies_segment_enum {
  Studio
  Artista
}

enum productartist_type_enum {
  Studio
  Artista
}

enum productstudio_type_enum {
  Studio
  Artista
}

enum users_user_type_enum {
  client
  system
}
